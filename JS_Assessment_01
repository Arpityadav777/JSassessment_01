// Array to hold all created Employee NFTs
const employeeNFTCollection = [];

// Function to mint a new "Employee" NFT with a conditional statement.
function mintEmployeeNFT(id, name, age, ethnicity, jobTitle, dressingStyle, salary) {
    if (!id || !name || !age || !ethnicity || !jobTitle || !dressingStyle || !salary) {
        console.error("All fields are required to mint an NFT.");
        return;
    }
// Object to store the metadata of the created NFTs
    const nftMetadata = {
        "ID": id,
        "Name": name,
        "Age": age,
        "Ethnicity": ethnicity,
        "JobTitle": jobTitle,
        "DressingStyle": dressingStyle,
        "Salary": salary,
        "MintedAt": new Date().toISOString(),
    };
    employeeNFTCollection.push(nftMetadata);
    console.log(`Successfully minted NFT for ${name} (ID: ${id}) at ${nftMetadata.MintedAt}`);
}

// Function to list all minted Employee NFTs.

function displayAllNFTs() {
    if (employeeNFTCollection.length === 0) {
        console.log("No NFTs have been minted yet.");
        return;
    }

    console.log("List of all minted Employee NFTs:");
    employeeNFTCollection.forEach((nft, index) => {
        console.log(`${index + 1}. ${nft.Name} (ID: ${nft.ID}) - ${nft.JobTitle}`);
        console.log(`   Age: ${nft.Age}, Ethnicity: ${nft.Ethnicity}, Style: ${nft.DressingStyle}, Salary: ${nft.Salary}`);
        console.log(`   Minted At: ${nft.MintedAt}`);
    });
}

// Function to get the total number of Employee NFTs created.
function displayTotalNFTs() {
    const total = employeeNFTCollection.length;
    console.log(`A total of ${total} Employee NFT${total !== 1 ? 's' : ''} ${total !== 1 ? 'have' : 'has'} been created.`);
}

// Passing values of NFTs in the function.

mintEmployeeNFT("001", "Arx", "18", "Indian", "NFT Creator", "Y2K", "$0");
mintEmployeeNFT("002", "Jenna", "22", "Brazilian", "Blockchain Developer", "Casual", "$5000");
mintEmployeeNFT("003", "Jack", "30", "American", "Project Manager", "Formal", "$7000");
displayAllNFTs();
displayTotalNFTs();
